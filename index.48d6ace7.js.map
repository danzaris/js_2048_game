{"mappings":"C,A,W,I,E,E,C,EOAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,ACJX,SAA8B,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNxC,SAA4B,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJnE,SAAwC,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AIN1G,WACI,MAAM,AAAI,UAAU,uIACxB,GJKA,CJHA,IAAM,EAAO,G,C,C,ECFb,eESoC,EFT9B,SAAA,IAEF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAPC,ACFN,SAA2B,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GASF,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,M,CAXZ,OES8B,EFT9B,C,CAcJ,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAAG,UACd,IAAI,CAAC,aAAa,GAClB,IAAI,CAAC,aAAa,EACpB,C,E,CAEA,IAAA,gBAAA,MAAA,WAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAW,IAAI,CAAC,CAAE,IAAK,EAAG,IAAK,CAAE,GAKvC,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,IAAM,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAC3C,EAAA,CAAU,CAAC,EAAY,CAApC,EAAa,EAAb,GAAA,CAAK,EAAQ,EAAR,GAAb,AAEA,CAAA,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACnD,CACF,C,E,CAEA,IAAA,oBAAA,MAAA,WACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,IAAI,CAAC,KAAK,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,GAAI,AADD,EAAA,KAAA,CACK,QAAQ,CAAC,MAAO,CACtB,IAAI,CAAC,MAAM,CAAG,MAEd,MACF,C,C,M,E,CALG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOP,C,E,CAEA,IAAA,qBAAA,MAAA,WACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,IAAI,CAAC,KAAK,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EACH,GAAI,AADD,EAAA,KAAA,CACK,QAAQ,CAAC,GACf,M,C,M,E,CAFC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAML,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAC5C,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAC3C,OAKN,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAG,IACzC,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAC3C,MAKN,CAAA,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAMf,IAAK,IAFD,EAAQ,CAAA,EAEH,EAAM,EAAG,EAAM,EAAG,KAA3B,A,S,C,EAIE,IAAK,IAHC,EAAc,AAAA,EAAG,EAAK,KAAK,CAAC,EAAI,EAClC,EAAS,EAAW,MAAM,CAAC,SAAC,CAAhC,EAA0C,OAAA,AAAU,IAAV,C,GAEjC,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,EAAK,KAAK,EAAI,CAAM,CAAC,EAAE,CACvB,CAAM,CAAC,EAAI,EAAE,CAAG,GAMpB,IAFA,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAkC,OAAA,AAAU,IAAV,C,GAE3B,EAAO,MAAM,CAAG,GACrB,EAAO,IAAI,CAAC,GAGV,EAAW,QAAQ,KAAO,EAAO,QAAQ,IAC3C,CAAA,EAAQ,CAAA,CADV,EAIA,EAAK,KAAK,CAAC,EAAI,CAAG,CACpB,EAvBA,GAyBI,GACF,IAAI,CAAC,aAAa,GAEpB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,kBAAkB,GACzB,C,E,CAEA,IAAA,YAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAMf,IAAK,IAFD,EAAQ,CAAA,EAEH,EAAM,EAAG,EAAM,EAAG,KAA3B,A,S,C,EAIE,IAAK,IAHC,EAAc,AAAA,EAAG,EAAK,KAAK,CAAC,EAAI,EAClC,EAAS,EAAW,MAAM,CAAC,SAAC,CAAhC,EAA0C,OAAA,AAAU,IAAV,C,GAEjC,EAAI,EAAO,MAAM,CAAG,EAAG,EAAI,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,EAAK,KAAK,EAAI,CAAM,CAAC,EAAE,CACvB,CAAM,CAAC,EAAI,EAAE,CAAG,GAMpB,IAFA,EAAS,EAAO,MAAM,CAAC,SAAC,CAAxB,EAAkC,OAAA,AAAU,IAAV,C,GAE3B,EAAO,MAAM,CAAG,GACrB,EAAO,OAAO,CAAC,GAGb,EAAW,QAAQ,KAAO,EAAO,QAAQ,IAC3C,CAAA,EAAQ,CAAA,CADV,EAIA,EAAK,KAAK,CAAC,EAAI,CAAG,CACpB,EAvBA,GAyBI,GACF,IAAI,CAAC,aAAa,GAEpB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,kBAAkB,GACzB,C,E,CAEA,IAAA,SAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAMf,IAAK,IAFD,EAAQ,CAAA,EAEH,EAAM,EAAG,EAAM,EAAG,KAA3B,A,S,C,EAWE,IAAK,IAVC,EAAS,CACb,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CACnB,CAEK,EAAa,AAAA,EAAG,GAClB,EAAY,EAAO,MAAM,CAAC,SAAC,CAA/B,EAAyC,OAAA,AAAU,IAAV,C,GAEhC,EAAI,EAAG,EAAI,EAAU,MAAM,CAAG,EAAG,IACpC,CAAS,CAAC,EAAE,GAAK,CAAS,CAAC,EAAI,EAAE,GACnC,CAAS,CAAC,EAAE,EAAI,EAChB,EAAK,KAAK,EAAI,CAAS,CAAC,EAAE,CAC1B,CAAS,CAAC,EAAI,EAAE,CAAG,GAMvB,IAFA,EAAY,EAAU,MAAM,CAAC,SAAC,CAA9B,EAAwC,OAAA,AAAU,IAAV,C,GAEjC,EAAU,MAAM,CAAG,GACxB,EAAU,IAAI,CAAC,GAGb,EAAU,QAAQ,KAAO,EAAU,QAAQ,IAC7C,CAAA,EAAQ,CAAA,CADV,EAIA,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,EAAK,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,CAAS,CAAC,EAAI,AAEzC,EAhCA,GAkCI,GACF,IAAI,CAAC,aAAa,GAEpB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,kBAAkB,GACzB,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAMf,IAAK,IAFD,EAAQ,CAAA,EAEH,EAAM,EAAG,EAAM,EAAG,KAA3B,A,S,C,EAUE,IAAK,IAFD,EAAY,AAPD,CACb,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CACnB,CAEsB,MAAM,CAAC,SAAC,CAA/B,EAAyC,OAAA,AAAU,IAAV,C,GAEhC,EAAI,EAAU,MAAM,CAAG,EAAG,EAAI,EAAG,IACpC,CAAS,CAAC,EAAE,GAAK,CAAS,CAAC,EAAI,EAAE,GACnC,CAAS,CAAC,EAAE,EAAI,EAChB,EAAK,KAAK,EAAI,CAAS,CAAC,EAAE,CAC1B,CAAS,CAAC,EAAI,EAAE,CAAG,GAMvB,IAFA,EAAY,EAAU,MAAM,CAAC,SAAC,CAA9B,EAAwC,OAAA,AAAU,IAAV,C,GAEjC,EAAU,MAAM,CAAG,GACxB,EAAU,OAAO,CAAC,GAUhB,AAPc,CAChB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CAClB,EAAK,KAAK,CAAC,EAAE,CAAC,EAAI,CACnB,CAEa,QAAQ,KAAO,EAAU,QAAQ,IAC7C,CAAA,EAAQ,CAAA,CADV,EAIA,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,EAAK,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,CAAS,CAAC,EAAI,AAEzC,EAtCA,GAwCI,GACF,IAAI,CAAC,aAAa,GAEpB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,kBAAkB,GACzB,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACD,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,CACX,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACD,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CAEA,IAAA,gBAAA,MAAA,WACE,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAC,CAArB,EAA6B,OAAA,EAAI,QAAQ,CAAC,EACxC,GAAA,MAAO,CAAA,EAGT,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IAAO,CAChC,IAAM,EAAQ,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAElC,GAAI,EAAM,GAAK,IAAU,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAM,EAAE,EAI7C,EAAM,GAAK,IAAU,IAAI,CAAC,KAAK,CAAC,EAAM,EAAE,CAAC,EAAI,CAH/C,MAAO,CAAA,CAMX,CAGF,MAAO,CAAA,CACT,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,GAAI,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,QAAQ,CAAC,MAG3B,OAFA,IAAI,CAAC,MAAM,CAAG,MAEP,CAAA,EAIX,MAAO,CAAA,CACT,C,E,CEvTkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFVhC,EEU4C,SAAS,CAAE,GFVvD,C,M,E,U,C,E,O,C,C,EDGA,EAAe,SAAS,aAAa,CAAC,eACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAmB,SAAS,cAAc,CAAC,cAQjD,SAAS,EAAY,CAAK,EACxB,EAAiB,SAAS,CAAG,GAE7B,EAAM,OAAO,CAAC,SAAC,CAAf,EACE,IAAM,EAAa,SAAS,aAAa,CAAC,MAE1C,EAAW,SAAS,CAAC,GAAG,CAAC,OAEzB,EAAI,OAAO,CAAC,SAAC,CAAb,EACE,IAAM,EAAc,SAAS,aAAa,CAAC,MAE3C,EAAY,SAAS,CAAC,GAAG,CAAC,QAC1B,EAAY,WAAW,CAAG,AAAS,IAAT,EAAa,EAAO,GAC9C,EAAW,WAAW,CAAC,EACzB,GAEA,EAAiB,WAAW,CAAC,EAC/B,GAEA,AAGF,SAA0B,CAAK,EAC7B,IAAM,EAAQ,SAAS,gBAAgB,CAAC,SAExC,EAAM,OAAO,CAAC,SAAC,CAAA,CAAK,CAApB,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAO,CAApB,EACE,IAAM,EAAO,CAAK,CAAC,AAAW,EAAX,EAAe,EAAS,AAE3C,CAAA,EAAK,SAAS,CAAG,OAEb,EAAQ,GACV,EAAK,SAAS,CAAC,GAAG,CAAE,SAAc,MAAA,CAAN,IAC5B,EAAK,WAAW,CAAG,GAEnB,EAAK,WAAW,CAAG,EAEvB,EACF,EACF,EApBmB,EACnB,CAqBA,SAAS,EAAc,CAAC,EACtB,IAAM,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAa,SAAS,CAAC,GAAG,CAAC,UAEvB,AAAM,QAAN,EACF,EAAW,SAAS,CAAC,MAAM,CAAC,UACnB,AAAM,SAAN,EACT,EAAY,SAAS,CAAC,MAAM,CAAC,UACd,UAAN,GACT,EAAa,SAAS,CAAC,MAAM,CAAC,SAElC,CAeA,SAAS,EAAc,CAAC,EACtB,GAAI,AAAqB,YAArB,EAAK,SAAS,IAIlB,OAAQ,EAAE,GAAG,EACX,IAAK,YACH,EAAK,QAAQ,GACb,KACF,KAAK,aACH,EAAK,SAAS,GACd,KACF,KAAK,UACH,EAAK,MAAM,GACX,KACF,KAAK,YACH,EAAK,QAAQ,EAEjB,CA9BA,EAAY,EAAK,QAAQ,IACzB,EAAa,WAAW,CAAG,EAAK,QAAQ,GAEpC,EAAK,QAAQ,IACf,EAAc,OACd,SAAS,mBAAmB,CAAC,UAAW,IAC9B,EAAK,aAAa,KAC5B,EAAc,QACd,SAAS,mBAAmB,CAAC,UAAW,IAwB5C,CAUA,SAAS,IACP,EAAK,KAAK,GACV,EAAY,EAAK,QAAQ,IACzB,EAAa,WAAW,CAAG,EAAK,QAAQ,GACxC,EAAc,SA7Gd,AAFqB,SAAS,aAAa,CAAC,eAE/B,WAAW,CAAG,GAAS,MAAA,CA8GxB,GAIZ,AAFqB,SAAS,aAAa,CAAC,kBAE/B,SAAS,CAAC,GAAG,CAAC,UAE3B,EAAY,WAAW,CAAG,UAC1B,EAAY,mBAAmB,CAAC,QAAS,GACzC,EAAY,gBAAgB,CAAC,QAAS,GAEtC,IAAM,EAAS,SAAS,aAAa,CAAC,iBAElC,IACF,EAAO,SAAS,CAAC,MAAM,CAAC,SACxB,EAAO,SAAS,CAAC,GAAG,CAAC,YAGvB,SAAS,gBAAgB,CAAC,UAAW,EACvC,CAEA,SAAS,IACP,EAAK,KAAK,GACV,EAAY,EAAK,QAAQ,IACzB,EAAa,WAAW,CAAG,EAAK,QAAQ,GACxC,EAAc,SACd,EAAY,WAAW,CAAG,QAE1B,EAAY,mBAAmB,CAAC,QAAS,GACzC,EAAY,gBAAgB,CAAC,QAAS,GAEtC,IAAM,EAAS,SAAS,aAAa,CAAC,mBAElC,IACF,EAAO,SAAS,CAAC,MAAM,CAAC,WACxB,EAAO,SAAS,CAAC,GAAG,CAAC,UAGvB,SAAS,gBAAgB,CAAC,UAAW,EACvC,CAnDA,SAAS,gBAAgB,CAAC,mBAAoB,WACxC,GACF,EAAY,gBAAgB,CAAC,QAAS,GAGxC,EAAY,EAAK,QAAQ,GAC3B,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var i = 0; i < this.board.length; i++){\n                    for(var j = 0; j < this.board[i].length; j++)if (this.board[i][j] === 0) emptyCells.push({\n                        row: i,\n                        col: j\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = emptyCells[randomIndex], row = _emptyCells_randomIndex.row, col = _emptyCells_randomIndex.col;\n                    this.board[row][col] = Math.random() < 0.1 ? 4 : 2;\n                }\n            }\n        },\n        {\n            key: \"checkWinCondition\",\n            value: function checkWinCondition() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(2048)) {\n                            this.status = \"win\";\n                            return;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"checkLoseCondition\",\n            value: function checkLoseCondition() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(0)) return;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                for(var i = 0; i < this.board.length; i++)for(var j = 0; j < this.board[i].length - 1; j++){\n                    if (this.board[i][j] === this.board[i][j + 1]) return;\n                }\n                for(var j1 = 0; j1 < this.board[0].length; j1++)for(var i1 = 0; i1 < this.board.length - 1; i1++){\n                    if (this.board[i1][j1] === this.board[i1 + 1][j1]) return;\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.board[row]);\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        newRow[i] *= 2;\n                        _this.score += newRow[i];\n                        newRow[i + 1] = 0;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.push(0);\n                    if (currentRow.toString() !== newRow.toString()) moved = true;\n                    _this.board[row] = newRow;\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < 4; row++)_loop(row);\n                if (moved) this.addRandomTile();\n                this.checkWinCondition();\n                this.checkLoseCondition();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(row) {\n                    var currentRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.board[row]);\n                    var newRow = currentRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1]) {\n                        newRow[i] *= 2;\n                        _this.score += newRow[i];\n                        newRow[i - 1] = 0;\n                    }\n                    newRow = newRow.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newRow.length < 4)newRow.unshift(0);\n                    if (currentRow.toString() !== newRow.toString()) moved = true;\n                    _this.board[row] = newRow;\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var row = 0; row < 4; row++)_loop(row);\n                if (moved) this.addRandomTile();\n                this.checkWinCondition();\n                this.checkLoseCondition();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var column = [\n                        _this.board[0][col],\n                        _this.board[1][col],\n                        _this.board[2][col],\n                        _this.board[3][col]\n                    ];\n                    var oldColumn = (0, $227c6742e0ff6f82$export$71511d61b312f219)(column);\n                    var newColumn = column.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = 0; i < newColumn.length - 1; i++)if (newColumn[i] === newColumn[i + 1]) {\n                        newColumn[i] *= 2;\n                        _this.score += newColumn[i];\n                        newColumn[i + 1] = 0;\n                    }\n                    newColumn = newColumn.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newColumn.length < 4)newColumn.push(0);\n                    if (oldColumn.toString() !== newColumn.toString()) moved = true;\n                    for(var row = 0; row < 4; row++)_this.board[row][col] = newColumn[row];\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var col = 0; col < 4; col++)_loop(col);\n                if (moved) this.addRandomTile();\n                this.checkWinCondition();\n                this.checkLoseCondition();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(col) {\n                    var column = [\n                        _this.board[0][col],\n                        _this.board[1][col],\n                        _this.board[2][col],\n                        _this.board[3][col]\n                    ];\n                    var newColumn = column.filter(function(value) {\n                        return value !== 0;\n                    });\n                    for(var i = newColumn.length - 1; i > 0; i--)if (newColumn[i] === newColumn[i - 1]) {\n                        newColumn[i] *= 2;\n                        _this.score += newColumn[i];\n                        newColumn[i - 1] = 0;\n                    }\n                    newColumn = newColumn.filter(function(value) {\n                        return value !== 0;\n                    });\n                    while(newColumn.length < 4)newColumn.unshift(0);\n                    var oldColumn = [\n                        _this.board[0][col],\n                        _this.board[1][col],\n                        _this.board[2][col],\n                        _this.board[3][col]\n                    ];\n                    if (oldColumn.toString() !== newColumn.toString()) moved = true;\n                    for(var row = 0; row < 4; row++)_this.board[row][col] = newColumn[row];\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var col = 0; col < 4; col++)_loop(col);\n                if (moved) this.addRandomTile();\n                this.checkWinCondition();\n                this.checkLoseCondition();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"hasValidMoves\",\n            value: function hasValidMoves() {\n                if (this.board.some(function(row) {\n                    return row.includes(0);\n                })) return true;\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var value = this.board[row][col];\n                    if (col < 3 && value === this.board[row][col + 1]) return true;\n                    if (row < 3 && value === this.board[row + 1][col]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var row = 0; row < 4; row++)if (this.board[row].includes(2048)) {\n                    this.status = \"won\";\n                    return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$scoreDisplay = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$gameBoardElement = document.getElementById(\"game-board\");\nfunction $197cd56b15c33885$var$updateScore(score) {\n    var scoreElement = document.querySelector(\".game-score\");\n    scoreElement.textContent = \"\".concat(score);\n}\nfunction $197cd56b15c33885$var$renderBoard(board) {\n    $197cd56b15c33885$var$gameBoardElement.innerHTML = \"\";\n    board.forEach(function(row) {\n        var rowElement = document.createElement(\"tr\");\n        rowElement.classList.add(\"row\");\n        row.forEach(function(cell) {\n            var cellElement = document.createElement(\"td\");\n            cellElement.classList.add(\"cell\");\n            cellElement.textContent = cell !== 0 ? cell : \"\";\n            rowElement.appendChild(cellElement);\n        });\n        $197cd56b15c33885$var$gameBoardElement.appendChild(rowElement);\n    });\n    $197cd56b15c33885$var$updateTileStyles(board);\n}\nfunction $197cd56b15c33885$var$updateTileStyles(board) {\n    var cells = document.querySelectorAll(\".cell\");\n    board.forEach(function(row, rowIndex) {\n        row.forEach(function(value, colIndex) {\n            var cell = cells[rowIndex * 4 + colIndex];\n            cell.className = \"cell\";\n            if (value > 0) {\n                cell.classList.add(\"cell--\".concat(value));\n                cell.textContent = value;\n            } else cell.textContent = \"\";\n        });\n    });\n}\nfunction $197cd56b15c33885$var$updateMessage(s) {\n    var loseMessage = document.querySelector(\".message-lose\");\n    var winMessage = document.querySelector(\".message-win\");\n    var startMessage = document.querySelector(\".message-start\");\n    loseMessage.classList.add(\"hidden\");\n    winMessage.classList.add(\"hidden\");\n    startMessage.classList.add(\"hidden\");\n    if (s === \"win\") winMessage.classList.remove(\"hidden\");\n    else if (s === \"lose\") loseMessage.classList.remove(\"hidden\");\n    else if (s === \"start\") startMessage.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$moveHandler() {\n    $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.checkWin()) {\n        $197cd56b15c33885$var$updateMessage(\"win\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyDown);\n    } else if (!$197cd56b15c33885$var$game.hasValidMoves()) {\n        $197cd56b15c33885$var$updateMessage(\"lose\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyDown);\n    }\n}\nfunction $197cd56b15c33885$var$handleKeyDown(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$moveHandler();\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    if ($197cd56b15c33885$var$startButton) $197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\n    $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game.getState());\n});\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$updateMessage(\"start\");\n    $197cd56b15c33885$var$updateScore(0);\n    var startMessage = document.querySelector(\".message-start\");\n    startMessage.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    $197cd56b15c33885$var$startButton.removeEventListener(\"click\", $197cd56b15c33885$var$startGame);\n    $197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$restartGame);\n    var button = document.querySelector(\".button.start\");\n    if (button) {\n        button.classList.remove(\"start\");\n        button.classList.add(\"restart\");\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyDown);\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$game.reset();\n    $197cd56b15c33885$var$renderBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$updateMessage(\"start\");\n    $197cd56b15c33885$var$startButton.textContent = \"Start\";\n    $197cd56b15c33885$var$startButton.removeEventListener(\"click\", $197cd56b15c33885$var$restartGame);\n    $197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\n    var button = document.querySelector(\".button.restart\");\n    if (button) {\n        button.classList.remove(\"restart\");\n        button.classList.add(\"start\");\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyDown);\n}\n\n})();\n//# sourceMappingURL=index.48d6ace7.js.map\n","'use strict';\n\nimport Game from './../modules/Game.class';\n\nconst game = new Game();\nconst scoreDisplay = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst gameBoardElement = document.getElementById('game-board');\n\nfunction updateScore(score) {\n  const scoreElement = document.querySelector('.game-score');\n\n  scoreElement.textContent = `${score}`;\n}\n\nfunction renderBoard(board) {\n  gameBoardElement.innerHTML = '';\n\n  board.forEach((row) => {\n    const rowElement = document.createElement('tr');\n\n    rowElement.classList.add('row');\n\n    row.forEach((cell) => {\n      const cellElement = document.createElement('td');\n\n      cellElement.classList.add('cell');\n      cellElement.textContent = cell !== 0 ? cell : '';\n      rowElement.appendChild(cellElement);\n    });\n\n    gameBoardElement.appendChild(rowElement);\n  });\n\n  updateTileStyles(board);\n}\n\nfunction updateTileStyles(board) {\n  const cells = document.querySelectorAll('.cell');\n\n  board.forEach((row, rowIndex) => {\n    row.forEach((value, colIndex) => {\n      const cell = cells[rowIndex * 4 + colIndex];\n\n      cell.className = 'cell';\n\n      if (value > 0) {\n        cell.classList.add(`cell--${value}`);\n        cell.textContent = value;\n      } else {\n        cell.textContent = '';\n      }\n    });\n  });\n}\n\nfunction updateMessage(s) {\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n  const startMessage = document.querySelector('.message-start');\n\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  startMessage.classList.add('hidden');\n\n  if (s === 'win') {\n    winMessage.classList.remove('hidden');\n  } else if (s === 'lose') {\n    loseMessage.classList.remove('hidden');\n  } else if (s === 'start') {\n    startMessage.classList.remove('hidden');\n  }\n}\n\nfunction moveHandler() {\n  renderBoard(game.getState());\n  scoreDisplay.textContent = game.getScore();\n\n  if (game.checkWin()) {\n    updateMessage('win');\n    document.removeEventListener('keydown', handleKeyDown);\n  } else if (!game.hasValidMoves()) {\n    updateMessage('lose');\n    document.removeEventListener('keydown', handleKeyDown);\n  }\n}\n\nfunction handleKeyDown(e) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n  moveHandler();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (startButton) {\n    startButton.addEventListener('click', startGame);\n  }\n\n  renderBoard(game.getState());\n});\n\nfunction startGame() {\n  game.start();\n  renderBoard(game.getState());\n  scoreDisplay.textContent = game.getScore();\n  updateMessage('start');\n  updateScore(0);\n\n  const startMessage = document.querySelector('.message-start');\n\n  startMessage.classList.add('hidden');\n\n  startButton.textContent = 'Restart';\n  startButton.removeEventListener('click', startGame);\n  startButton.addEventListener('click', restartGame);\n\n  const button = document.querySelector('.button.start');\n\n  if (button) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n  }\n\n  document.addEventListener('keydown', handleKeyDown);\n}\n\nfunction restartGame() {\n  game.reset();\n  renderBoard(game.getState());\n  scoreDisplay.textContent = game.getScore();\n  updateMessage('start');\n  startButton.textContent = 'Start';\n\n  startButton.removeEventListener('click', restartGame);\n  startButton.addEventListener('click', startGame);\n\n  const button = document.querySelector('.button.restart');\n\n  if (button) {\n    button.classList.remove('restart');\n    button.classList.add('start');\n  }\n\n  document.addEventListener('keydown', handleKeyDown);\n}\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.board.length; i++) {\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push({ row: i, col: j });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const { row, col } = emptyCells[randomIndex];\n\n      this.board[row][col] = Math.random() < 0.1 ? 4 : 2;\n    }\n  }\n\n  checkWinCondition() {\n    for (const row of this.board) {\n      if (row.includes(2048)) {\n        this.status = 'win';\n\n        return;\n      }\n    }\n  }\n\n  checkLoseCondition() {\n    for (const row of this.board) {\n      if (row.includes(0)) {\n        return;\n      }\n    }\n\n    for (let i = 0; i < this.board.length; i++) {\n      for (let j = 0; j < this.board[i].length - 1; j++) {\n        if (this.board[i][j] === this.board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n\n    for (let j = 0; j < this.board[0].length; j++) {\n      for (let i = 0; i < this.board.length - 1; i++) {\n        if (this.board[i][j] === this.board[i + 1][j]) {\n          return;\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      const currentRow = [...this.board[row]];\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          newRow[i] *= 2;\n          this.score += newRow[i];\n          newRow[i + 1] = 0;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      if (currentRow.toString() !== newRow.toString()) {\n        moved = true;\n      }\n\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWinCondition();\n    this.checkLoseCondition();\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let row = 0; row < 4; row++) {\n      const currentRow = [...this.board[row]];\n      let newRow = currentRow.filter((value) => value !== 0);\n\n      for (let i = newRow.length - 1; i > 0; i--) {\n        if (newRow[i] === newRow[i - 1]) {\n          newRow[i] *= 2;\n          this.score += newRow[i];\n          newRow[i - 1] = 0;\n        }\n      }\n\n      newRow = newRow.filter((value) => value !== 0);\n\n      while (newRow.length < 4) {\n        newRow.unshift(0);\n      }\n\n      if (currentRow.toString() !== newRow.toString()) {\n        moved = true;\n      }\n\n      this.board[row] = newRow;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWinCondition();\n    this.checkLoseCondition();\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let col = 0; col < 4; col++) {\n      const column = [\n        this.board[0][col],\n        this.board[1][col],\n        this.board[2][col],\n        this.board[3][col],\n      ];\n\n      const oldColumn = [...column];\n      let newColumn = column.filter((value) => value !== 0);\n\n      for (let i = 0; i < newColumn.length - 1; i++) {\n        if (newColumn[i] === newColumn[i + 1]) {\n          newColumn[i] *= 2;\n          this.score += newColumn[i];\n          newColumn[i + 1] = 0;\n        }\n      }\n\n      newColumn = newColumn.filter((value) => value !== 0);\n\n      while (newColumn.length < 4) {\n        newColumn.push(0);\n      }\n\n      if (oldColumn.toString() !== newColumn.toString()) {\n        moved = true;\n      }\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWinCondition();\n    this.checkLoseCondition();\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let col = 0; col < 4; col++) {\n      const column = [\n        this.board[0][col],\n        this.board[1][col],\n        this.board[2][col],\n        this.board[3][col],\n      ];\n\n      let newColumn = column.filter((value) => value !== 0);\n\n      for (let i = newColumn.length - 1; i > 0; i--) {\n        if (newColumn[i] === newColumn[i - 1]) {\n          newColumn[i] *= 2;\n          this.score += newColumn[i];\n          newColumn[i - 1] = 0;\n        }\n      }\n\n      newColumn = newColumn.filter((value) => value !== 0);\n\n      while (newColumn.length < 4) {\n        newColumn.unshift(0);\n      }\n\n      const oldColumn = [\n        this.board[0][col],\n        this.board[1][col],\n        this.board[2][col],\n        this.board[3][col],\n      ];\n\n      if (oldColumn.toString() !== newColumn.toString()) {\n        moved = true;\n      }\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n    }\n\n    if (moved) {\n      this.addRandomTile();\n    }\n    this.checkWinCondition();\n    this.checkLoseCondition();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  reset() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  hasValidMoves() {\n    if (this.board.some((row) => row.includes(0))) {\n      return true;\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const value = this.board[row][col];\n\n        if (col < 3 && value === this.board[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && value === this.board[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkWin() {\n    for (let row = 0; row < 4; row++) {\n      if (this.board[row].includes(2048)) {\n        this.status = 'won';\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["a","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","board","score","status","key","value","addRandomTile","emptyCells","j","push","row","col","randomIndex","Math","floor","random","_emptyCells_randomIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","includes","err","return","j1","i1","_this","moved","_loop","currentRow","newRow","filter","checkWinCondition","checkLoseCondition","unshift","column","oldColumn","newColumn","some","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","__esModule","default","$197cd56b15c33885$var$scoreDisplay","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$gameBoardElement","getElementById","$197cd56b15c33885$var$renderBoard","innerHTML","forEach","rowElement","createElement","classList","add","cell","cellElement","textContent","appendChild","$197cd56b15c33885$var$updateTileStyles","cells","querySelectorAll","rowIndex","colIndex","className","concat","$197cd56b15c33885$var$updateMessage","s","loseMessage","winMessage","startMessage","remove","$197cd56b15c33885$var$handleKeyDown","e","getStatus","moveLeft","moveRight","moveUp","moveDown","getState","getScore","checkWin","removeEventListener","hasValidMoves","$197cd56b15c33885$var$startGame","start","scoreElement","addEventListener","$197cd56b15c33885$var$restartGame","button","reset"],"version":3,"file":"index.48d6ace7.js.map"}